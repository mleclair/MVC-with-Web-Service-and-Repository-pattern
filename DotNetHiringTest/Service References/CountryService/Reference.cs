//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNetHiringTest.CountryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/DotNetHiringTest.Models")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Alpha3CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> BordersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> LanguagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumericCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alpha3Code {
            get {
                return this.Alpha3CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Alpha3CodeField, value) != true)) {
                    this.Alpha3CodeField = value;
                    this.RaisePropertyChanged("Alpha3Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Borders {
            get {
                return this.BordersField;
            }
            set {
                if ((object.ReferenceEquals(this.BordersField, value) != true)) {
                    this.BordersField = value;
                    this.RaisePropertyChanged("Borders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Capital {
            get {
                return this.CapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.CapitalField, value) != true)) {
                    this.CapitalField = value;
                    this.RaisePropertyChanged("Capital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Languages {
            get {
                return this.LanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguagesField, value) != true)) {
                    this.LanguagesField = value;
                    this.RaisePropertyChanged("Languages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumericCode {
            get {
                return this.NumericCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NumericCodeField, value) != true)) {
                    this.NumericCodeField = value;
                    this.RaisePropertyChanged("NumericCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Translation", Namespace="http://schemas.datacontract.org/2004/07/DotNetHiringTest.Models")]
    [System.SerializableAttribute()]
    public partial class Translation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageCode {
            get {
                return this.LanguageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageCodeField, value) != true)) {
                    this.LanguageCodeField = value;
                    this.RaisePropertyChanged("LanguageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CountryService.ICountryService")]
    public interface ICountryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountries", ReplyAction="http://tempuri.org/ICountryService/GetCountriesResponse")]
        System.Collections.Generic.List<DotNetHiringTest.CountryService.Country> GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountries", ReplyAction="http://tempuri.org/ICountryService/GetCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DotNetHiringTest.CountryService.Country>> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountryById", ReplyAction="http://tempuri.org/ICountryService/GetCountryByIdResponse")]
        DotNetHiringTest.CountryService.Country GetCountryById(int countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountryById", ReplyAction="http://tempuri.org/ICountryService/GetCountryByIdResponse")]
        System.Threading.Tasks.Task<DotNetHiringTest.CountryService.Country> GetCountryByIdAsync(int countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountryByAlpha3Code", ReplyAction="http://tempuri.org/ICountryService/GetCountryByAlpha3CodeResponse")]
        DotNetHiringTest.CountryService.Country GetCountryByAlpha3Code(string alpha3Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountryByAlpha3Code", ReplyAction="http://tempuri.org/ICountryService/GetCountryByAlpha3CodeResponse")]
        System.Threading.Tasks.Task<DotNetHiringTest.CountryService.Country> GetCountryByAlpha3CodeAsync(string alpha3Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetTranslations", ReplyAction="http://tempuri.org/ICountryService/GetTranslationsResponse")]
        System.Collections.Generic.List<DotNetHiringTest.CountryService.Translation> GetTranslations(string countryAlpha3Code, string lanuageCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetTranslations", ReplyAction="http://tempuri.org/ICountryService/GetTranslationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DotNetHiringTest.CountryService.Translation>> GetTranslationsAsync(string countryAlpha3Code, string lanuageCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICountryServiceChannel : DotNetHiringTest.CountryService.ICountryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountryServiceClient : System.ServiceModel.ClientBase<DotNetHiringTest.CountryService.ICountryService>, DotNetHiringTest.CountryService.ICountryService {
        
        public CountryServiceClient() {
        }
        
        public CountryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CountryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<DotNetHiringTest.CountryService.Country> GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DotNetHiringTest.CountryService.Country>> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public DotNetHiringTest.CountryService.Country GetCountryById(int countryId) {
            return base.Channel.GetCountryById(countryId);
        }
        
        public System.Threading.Tasks.Task<DotNetHiringTest.CountryService.Country> GetCountryByIdAsync(int countryId) {
            return base.Channel.GetCountryByIdAsync(countryId);
        }
        
        public DotNetHiringTest.CountryService.Country GetCountryByAlpha3Code(string alpha3Code) {
            return base.Channel.GetCountryByAlpha3Code(alpha3Code);
        }
        
        public System.Threading.Tasks.Task<DotNetHiringTest.CountryService.Country> GetCountryByAlpha3CodeAsync(string alpha3Code) {
            return base.Channel.GetCountryByAlpha3CodeAsync(alpha3Code);
        }
        
        public System.Collections.Generic.List<DotNetHiringTest.CountryService.Translation> GetTranslations(string countryAlpha3Code, string lanuageCode) {
            return base.Channel.GetTranslations(countryAlpha3Code, lanuageCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DotNetHiringTest.CountryService.Translation>> GetTranslationsAsync(string countryAlpha3Code, string lanuageCode) {
            return base.Channel.GetTranslationsAsync(countryAlpha3Code, lanuageCode);
        }
    }
}
